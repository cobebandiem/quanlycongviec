{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","components/TaskForm.js","components/Sort.js","components/Search.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/editingTask.js","reducers/filterTable.js","reducers/sort.js","reducers/index.js","index.js"],"names":["LIST_ALL","ADD_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","TOGGLE_STATUS","DELETE_TASK","UPDATE_TASK","EDIT_TASK","FILTER_TABLE","SORT","openForm","type","types","taskEditing","task","TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","id","onUpdateTask","onAddTask","onClear","status","this","editingTask","nextProps","className","onClick","Component","connect","dispatch","actions","Sort","sortBy","sortValue","onSort","by","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","sort","Search","onSearch","keyWord","placeholder","Control","TaskItem","onUpdateStatus","onToggleStatus","onDelete","onUpdate","onOpenForm","onEditingTaks","index","TaskList","onFilterTable","filterName","parseInt","filterStatus","tasks","filterTable","a","b","filter","item","toLowerCase","indexOf","elmTasks","map","App","onToggleForm","onClearTask","isDisplayForm","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","JSON","parse","localStorage","getItem","initialState","s4","Math","floor","random","toString","substring","generateID","findIndexID","findIndex","myReducer","action","newTask","push","setItem","stringify","console","log","splice","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.377f170a.chunk.js","sourcesContent":["export const LIST_ALL='LIST_ALL';\r\nexport const ADD_TASK='ADD_TASK';\r\nexport const TOGGLE_FORM='TOGGLE_FORM';\r\nexport const CLOSE_FORM='CLOSE_FORM';\r\nexport const OPEN_FORM='OPEN_FORM';\r\nexport const TOGGLE_STATUS='TOGGLE_STATUS';\r\nexport const DELETE_TASK='DELETE_TASK';\r\nexport const UPDATE_TASK='UPDATE_TASK';\r\nexport const EDIT_TASK='EDIT_TASK';\r\nexport const FILTER_TABLE='FILTER_TABLE';\r\nexport const SORT='SORT';","import * as types from './../constants/ActionTypes';\r\nexport const listAll=()=>{\r\n    return {\r\n        type: types.LIST_ALL\r\n    }\r\n}\r\nexport const addTask=(task)=>{\r\n    return {\r\n        type:types.ADD_TASK,\r\n        task\r\n    }\r\n}\r\nexport const toggleForm=()=>{\r\n    return {\r\n        type:types.TOGGLE_FORM\r\n    }\r\n}\r\nexport const closeForm=()=>{\r\n    return {\r\n        type:types.CLOSE_FORM\r\n    }\r\n}\r\nexport const openForm=()=>{\r\n    return {\r\n        type:types.OPEN_FORM\r\n    }\r\n}\r\nexport const toggleStatus=(id)=>{\r\n    return {\r\n        type:types.TOGGLE_STATUS,\r\n        id\r\n    }\r\n}\r\nexport const deleteTask=(id)=>{\r\n    return {\r\n        type:types.DELETE_TASK,\r\n        id\r\n    }\r\n}\r\nexport const updateTask=(task)=>{\r\n    return {\r\n        type:types.UPDATE_TASK,\r\n        task\r\n    }\r\n}\r\nexport const taskEditing=(task)=>{\r\n    return {\r\n        type:types.EDIT_TASK,\r\n        task\r\n    }\r\n}\r\nexport const filterTasks=(filter)=>{\r\n    return{\r\n        type:types.FILTER_TABLE,\r\n        filter\r\n    }\r\n}\r\nexport const sortTasks=(sort)=>{\r\n    return {\r\n        type:types.SORT,\r\n        sort\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport * as actions from './../actions/index';\r\nimport {connect} from 'react-redux';\r\nclass TaskForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:'',\r\n            name:'',\r\n            status:false\r\n        }\r\n    }\r\n    onCloseForm=()=>{\r\n        this.props.onCloseForm();\r\n    }\r\n    onChange=(event)=>{\r\n        var target=event.target;\r\n        var name=target.name;\r\n        var value=target.value;\r\n        if(name==='status'){\r\n            value=target.value==='true'?true:false;\r\n        }\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n    onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        if(this.state.id){\r\n            this.props.onUpdateTask(this.state);\r\n        }else{\r\n            this.props.onAddTask(this.state);\r\n        }\r\n        this.onClear();\r\n        this.onCloseForm();\r\n    }\r\n    onClear=()=>{\r\n        this.setState({\r\n            name:'',    \r\n            status:false\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.editingTask){\r\n            this.setState({\r\n                id:this.props.editingTask.id,\r\n                name:this.props.editingTask.name,\r\n                status:this.props.editingTask.status\r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.editingTask){\r\n            this.setState({\r\n                id:nextProps.editingTask.id,\r\n                name:nextProps.editingTask.name,\r\n                status:nextProps.editingTask.status\r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n  render(){\r\n    var { id }=this.state;\r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n            <h3 className=\"panel-title\">\r\n                { id!==''?'Cập Nhập Công Việc':'Thêm Công Việc' }\r\n                <span onClick={this.onCloseForm} className=\"fa fa-times-circle text-right\"></span>\r\n            </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Tên :</label>\r\n                    <input name=\"name\" type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChange}/>\r\n                </div>\r\n                <label>Trạng Thái :</label>\r\n                <select name=\"status\" className=\"form-control\" value={this.state.status} onChange={this.onChange}>\r\n                    <option value={true}>Kích Hoạt</option>\r\n                    <option value={false}>Ẩn</option>\r\n                </select>\r\n                <br/>\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={ this.onClear }>Hủy Bỏ</button>\r\n                </div>\r\n            </form>\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        editingTask:state.editingTask\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch, props)=>{\r\n    return{ \r\n        onAddTask:(task)=>{\r\n            dispatch(actions.addTask(task));\r\n        },\r\n        onCloseForm:()=>{\r\n            dispatch(actions.closeForm());\r\n        },\r\n        onUpdateTask:(task)=>{\r\n            dispatch(actions.updateTask(task));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React,{Component} from 'react';\r\nimport * as actions from './../actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Sort extends Component{\r\n    onClick=(sortBy,sortValue)=>{\r\n        this.props.onSort({by:sortBy,value:sortValue});\r\n    }\r\n  render(){\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                    Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick={()=>{this.onClick('name',1)}}>\r\n                        <a role=\"button\">\r\n                                    <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                        Tên A-Z\r\n                                    </span>\r\n                                </a>\r\n                    </li>\r\n                    <li onClick={()=>{this.onClick('name',-1)}}>\r\n                        <a role=\"button\">\r\n                                    <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                        Tên Z-A\r\n                                    </span>\r\n                                </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li onClick={()=>{this.onClick('status',1)}}><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                    <li onClick={()=>{this.onClick('status',-1)}}><a role=\"button\">Trạng Thái Ẩn</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        sort:state.sort\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return {\r\n        onSort:(sort)=>{\r\n            dispatch(actions.sortTasks(sort))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Sort);\r\n","import React,{Component} from 'react';\r\nclass Search extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      keyWord:''\r\n    }  \r\n  }\r\n  onChange=(event)=>{\r\n    var target=event.target;\r\n    var name=target.name;\r\n    var value=target.value;\r\n    this.setState({\r\n      [name]:value\r\n    });\r\n  }\r\n  onSearch=()=>{\r\n    this.props.onSearch(this.state.keyWord);\r\n  }\r\n  render(){\r\n\r\n    return (\r\n       <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" name=\"keyWord\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" value={this.state.keyWord} onChange={this.onChange} />\r\n                <span className=\"input-group-btn\">\r\n                  <button className=\"btn btn-primary\" onClick={this.onSearch} type=\"button\">\r\n                      <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                  </button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React,{Component} from 'react';\r\nimport Sort from './Sort';\r\nimport Search from './Search';\r\n\r\nclass Control extends Component{\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"row mt-15\">\r\n        \t<Search/>\r\n          <Sort/>\r\n          \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskItem extends Component{\r\n    onUpdateStatus=()=>{\r\n        this.props.onToggleStatus(this.props.task.id);\r\n    }\r\n    onDelete=()=>{\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate=()=>{\r\n        this.props.onOpenForm();\r\n        this.props.onEditingTaks(this.props.task);\r\n    }\r\n  render(){\r\n    var { task, index }=this.props;\r\n    return (\r\n        <tr>\r\n            <td>{ index + 1 }</td>\r\n            <td>{ task.name }</td>\r\n            <td className=\"text-center\">\r\n                <span \r\n                    className={task.status===true?'label label-danger':'label label-success'} \r\n                    onClick={this.onUpdateStatus}\r\n                >\r\n                    { task.status===true?'Kích Hoạt':'Ẩn' }\r\n                </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <button onClick={this.onUpdate} type=\"button\" className=\"btn btn-warning\">\r\n                    <span className=\"fa fa-pencil mr-5\"></span>&nbsp;Sửa\r\n                </button>\r\n                &nbsp;\r\n                <button onClick={this.onDelete} type=\"button\" className=\"btn btn-danger\">\r\n                    <span className=\"fa fa-trash mr-5\"></span>&nbsp;Xóa\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\nvar mapStateToProps =(state)=>{\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch, props)=>{\r\n    return{\r\n        onToggleStatus:(id)=>{\r\n            dispatch(actions.toggleStatus(id));\r\n        },\r\n        onDelete:(id)=>{\r\n            dispatch(actions.deleteTask(id));\r\n        },\r\n        onEditingTaks:(task)=>{\r\n            dispatch(actions.taskEditing(task));\r\n        },\r\n        onOpenForm:()=>{\r\n            dispatch(actions.openForm());\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskItem);\r\n","import React,{Component} from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass TaskList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            filterName:'',\r\n            filterStatus:-1//all:-1,active:1,deactive:0\r\n        }\r\n    }\r\n    onChange=(event)=>{\r\n        var target=event.target;\r\n        var name=target.name;\r\n        var value=target.value;\r\n        // this.props.onFilter(\r\n        //     name==='filterName'?value:this.state.filterName,\r\n        //     name==='filterStatus'?value:this.state.filterStatus\r\n        // );\r\n        this.props.onFilterTable({\r\n            name:name === 'filterName' ? value : this.state.filterName,\r\n            status:name === 'filterStatus' ? parseInt(value): this.state.filterStatus\r\n        });\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n  render(){\r\n    var { tasks }=this.props;\r\n    var { name,status}=this.props.filterTable;\r\n    var {by,value}=this.props.sort;\r\n    if(by==='name'){\r\n      tasks=tasks.sort((a,b)=>{\r\n        if(a.name > b.name)return value;\r\n        else if(a.name < b.name)return -value;\r\n        else return 0;\r\n      });\r\n    }else{\r\n        tasks=tasks.sort((a,b)=>{\r\n            if(a.status>b.status) return -value;\r\n            else if(a.status<b.status) return value;\r\n            else return 0;\r\n        });\r\n    }\r\n    if(name){\r\n        tasks=tasks.filter((item)=>{\r\n            return item.name.toLowerCase().indexOf(name.toLowerCase()) !== -1;\r\n        })\r\n    }\r\n    if(status!==-1){\r\n        tasks=tasks.filter((item)=>{\r\n            return item.status===(status===1?true:false);\r\n        })\r\n    }\r\n    var elmTasks=tasks.map((task,index)=>{\r\n        return <TaskItem key={task.id} task={task} index={index}/>\r\n    });\r\n    return (\r\n        <div className=\"row mt-15\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <table className=\"table table-bordered table-hover mt-15\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">STT</th>\r\n                            <th className=\"text-center\">Tên</th>\r\n                            <th className=\"text-center\">Trạng Thái</th>\r\n                            <th className=\"text-center\">Hành Động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <input name=\"filterName\" type=\"text\" className=\"form-control\" value={name} onChange={this.onChange}/>\r\n                            </td>\r\n                            <td>\r\n                                <select className=\"form-control\" name=\"filterStatus\" value={status} onChange={this.onChange}>\r\n                                    <option value={-1}>Tất Cả</option>\r\n                                    <option value={0}>Ẩn</option>\r\n                                    <option value={1}>Kích Hoạt</option>\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        { elmTasks }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        tasks:state.tasks,\r\n        filterTable:state.filterTable,\r\n        sort:state.sort\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return {\r\n        onFilterTable:(filter)=>{\r\n            dispatch(actions.filterTasks(filter))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskList);\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport {connect} from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component{\n    onToggleForm=()=>{\n        if(this.props.taskEditing && this.props.taskEditing.id!==''){\n            this.props.onOpenForm();\n        }else{\n            this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id:'',\n            name:'',\n            status:false\n        });\n    }\n  render(){\n    var { isDisplayForm }=this.props;\n    var elmTaskForm=isDisplayForm?<TaskForm/>:'';\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n            <h1>Quản Lý Công Việc</h1>\n            <hr/>\n        </div>\n        <div className=\"row\">\n            <div className={isDisplayForm?\"col-xs-4 col-sm-4 col-md-4 col-lg-4\":\"\"}>\n                { elmTaskForm }\n            </div>\n            <div className={isDisplayForm?\"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                <button type=\"button\" onClick={this.onToggleForm} className=\"btn btn-primary\">\n                    <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                </button>\n                <Control/>\n                <TaskList/>\n            </div>\n        </div>\n    </div>\n    );\n  }\n}\n\nvar mapStateToProps =(state)=>{\n    return {\n        isDisplayForm:state.isDisplayForm,\n        taskEditing:state.editingTask\n    }\n}\nconst mapDispatchToProps=(dispatch, props)=>{\n    return{\n        onToggleForm:()=>{\n            dispatch(actions.toggleForm());\n        },\n        onClearTask:(task)=>{\n            dispatch(actions.taskEditing(task));\n        },\n        onOpenForm:()=>{\n            dispatch(actions.openForm());\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {LIST_ALL,ADD_TASK,TOGGLE_STATUS,DELETE_TASK,UPDATE_TASK} from './../constants/ActionTypes';\r\nvar data=JSON.parse(localStorage.getItem('tasks'));\r\nvar initialState=data?data:[];\r\nvar s4=()=>{\r\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\r\n}\r\nvar generateID=()=>{\r\n    return s4()+s4()+'-'+s4()+s4()+'-'+s4()+s4()+'-'+s4()+s4()+'-'+s4()+s4()+s4()+s4()+'-'+s4()+s4()+s4()+s4()+'-'+s4()+s4();\r\n}\r\nvar findIndexID=(id,state)=>{\r\n    let index=state.findIndex((item)=>item.id===id);\r\n    return index;\r\n}\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case LIST_ALL:{\r\n            return state;\r\n        }\r\n        case ADD_TASK:{\r\n            var newTask={\r\n                id:generateID(),\r\n                name:action.task.name,\r\n                status:action.task.status\r\n            }\r\n            state.push(newTask);\r\n            localStorage.setItem('tasks',JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        case TOGGLE_STATUS:{\r\n            const index=findIndexID(action.id,state);\r\n            state[index]={...state[index],status:!state[index].status};\r\n            localStorage.setItem('tasks',JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        case UPDATE_TASK:{\r\n            console.log(action);\r\n            const index=findIndexID(action.task.id,state);\r\n            state[index]={...state[index],name:action.task.name,status:action.task.status};\r\n            localStorage.setItem('tasks',JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        case DELETE_TASK:{\r\n            const index=findIndexID(action.id,state);\r\n            state.splice(index,1);\r\n            localStorage.setItem('tasks',JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n    }\r\n    return state;\r\n}\r\nexport default myReducer;","import {TOGGLE_FORM,CLOSE_FORM,OPEN_FORM} from './../constants/ActionTypes';\r\nvar initialState=false;\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case TOGGLE_FORM:{\r\n            return !state;\r\n        }\r\n        case CLOSE_FORM:{\r\n            return false;\r\n        }\r\n        case OPEN_FORM:{\r\n            return true;\r\n        }\r\n    }\r\n    return state;\r\n}\r\nexport default myReducer;","import {EDIT_TASK} from './../constants/ActionTypes';\r\nvar initialState={\r\n    id:'',\r\n    name:'',\r\n    status:false\r\n};\r\n\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case EDIT_TASK:{\r\n            state=action.task\r\n            return {...state}\r\n        }\r\n    }\r\n    return {...state};\r\n}\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\nvar initialState={\r\n    name:'',\r\n    status:-1\r\n};\r\n\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case types.FILTER_TABLE:{\r\n            return action.filter\r\n        }\r\n    }\r\n    return {...state};\r\n}\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\nvar initialState={\r\n    by:'',\r\n    value:1\r\n};\r\n\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case types.SORT:{\r\n            console.log(action);\r\n            return action.sort;\r\n        }\r\n    }\r\n    return {...state};\r\n}\r\nexport default myReducer;","import {combineReducers} from 'redux';\r\nimport tasks from './tasks';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport editingTask from './editingTask';\r\nimport filterTable from './filterTable';\r\nimport sort from './sort';\r\nvar myReducer=combineReducers({\r\n    tasks,\r\n    isDisplayForm,\r\n    editingTask,\r\n    filterTable,\r\n    sort\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport myReducer from './reducers/index';\nimport {Provider} from 'react-redux';\n\nconst store=createStore(\n  myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}